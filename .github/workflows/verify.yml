name: verify
on:
  push:
    branches:
      - "main"
  workflow_dispatch:
    inputs:
      ignore_prev_result:
        type: boolean
        default: false

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  # group: "pages"
  group: ${{ github.head_ref || 'x' }}-${{ github.workflow }}-${{ github.ref }}-verify
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      dropbox_token: ${{steps.set_dropbox_token.outputs.dropbox_token}}
    steps:
      - uses: actions/checkout@v4

      - name: Set up competitive-verifier
        uses: competitive-verifier/actions/setup@v2
        with:
          cache-pip: true

      - name: oj-resolve
        uses: competitive-verifier/actions/oj-resolve@v2
        with:
          output-path: verify_files.json
          # Specify patterns
          # include: your-own-include/
          exclude: |
                ac-library/
          # If you have config.toml
          config: .competitive-verifier/config.toml
      - name: parse-doxygen
        uses: competitive-verifier/actions/parse-doxygen@v2
        with:
          verify-files: verify_files.json

      - name: Upload verify_files.json
        uses: competitive-verifier/actions/upload-verify-artifact@v2
        with:
          file: verify_files.json

      - name: Check bundled
        id: test-bundled
        run: |
          echo "count=$(find .competitive-verifier/bundled/ -type f | wc -l)" >> $GITHUB_OUTPUT
      - name: Upload bundled
        uses: actions/upload-artifact@v4
        if: steps.test-bundled.outputs.count > 0
        with:
          name: Bundled-${{ runner.os }}
          path: .competitive-verifier/bundled
          retention-days: 1

      - id: set_dropbox_token
        name: Set dropbox token
        run: |
          DROPBOX_TOKEN=$( \
            curl https://api.dropbox.com/oauth2/token \
              -d grant_type=refresh_token \
              -d refresh_token=$DROPBOX_REFRESH_TOKEN \
              -u $DROPBOX_APP_KEY:$DROPBOX_APP_SECRET \
            | jq -r '.["access_token"]' \
          )
          echo "::add-mask::$DROPBOX_TOKEN"
          DROPBOX_TOKEN_ENC=$(echo "$DROPBOX_TOKEN" | openssl enc -aes256 -e -pbkdf2 -base64 -A -k '${{secrets.AES256_KEY}}')
          echo "dropbox_token=$DROPBOX_TOKEN_ENC" >> $GITHUB_OUTPUT
        env:
          DROPBOX_APP_KEY: ${{secrets.DROPBOX_APP_KEY}}
          DROPBOX_APP_SECRET: ${{secrets.DROPBOX_APP_SECRET}}
          DROPBOX_REFRESH_TOKEN: ${{secrets.DROPBOX_REFRESH_TOKEN}}

  verify:
    runs-on: ubuntu-latest
    needs: [setup]
    env:
      SPLIT_SIZE: "5"
    strategy:
      matrix:
        # prettier-ignore
        index:
          ["0", "1", "2", "3", "4"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2147483647

      - name: Recieve dropbox token
        if: ${{ !inputs.ignore_prev_result }}
        uses: actions/cache/restore@v4
        id: restore-cached-results
        with:
        run: |
          path: ${{github.workspace}}/merged-result.json
          DROPBOX_TOKEN=$(echo "${{needs.setup.outputs.dropbox_token}}" | openssl enc -aes256 -d -pbkdf2 -base64 -A -k '${{secrets.AES256_KEY}}')
          key: ${{ runner.os }}-verify-result-${{ github.sha }}
          echo "::add-mask::$DROPBOX_TOKEN"
          restore-keys: |
          echo "DROPBOX_TOKEN=$DROPBOX_TOKEN" >> $GITHUB_ENV

      - name: Restore cached results
        if: ${{ !inputs.ignore_prev_result }}
        uses: actions/cache/restore@v4
        id: restore-cached-results
        with:
          path: ${{github.workspace}}/merged-result.json
          key: ${{ runner.os }}-verify-result-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-verify-result-

      - name: Download verify_files.json
        uses: competitive-verifier/actions/download-verify-artifact@v2

      - name: Set up competitive-verifier
        uses: competitive-verifier/actions/setup@v2
        with:
          cache-pip: true

      - name: Verify
        uses: competitive-verifier/actions/verify@v2
        with:
          destination: ${{runner.temp}}/result.json
          split-size: ${{ env.SPLIT_SIZE }}
          split-index: ${{ matrix.index }}
          timeout: 1800
          prev-result: ${{ steps.restore-cached-results.outputs.cache-hit && 'merged-result.json' || ''}}
        env:
          YUKICODER_TOKEN: ${{secrets.YUKICODER_TOKEN}}

      - name: Upload result artifact
        uses: actions/upload-artifact@v4
        with:
          name: Result-${{ runner.os }}-${{ matrix.index }}
          path: ${{runner.temp}}/result.json
          retention-days: 1

  docs-and-check:
    runs-on: ubuntu-latest
    needs: [verify]
    outputs:
      upload-pages: ${{steps.upload-pages.outcome == 'success'}}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2147483647
  
      - name: Download verify_files.json and all artifacts
        id: all-artifacts
        uses: competitive-verifier/actions/download-verify-artifact@v2
        with:
          download-all: true
          artifact-root: .artifacts/
  
      - name: Extract bundled
        shell: bash
        run: |
          rm -rf .competitive-verifier/bundled
          if test -d "$SRCDIR"; then
            mkdir -p .competitive-verifier/
            mv "$SRCDIR" .competitive-verifier/bundled
          else
            echo "$SRCDIR does not exist."
          fi
        env:
          SRCDIR: .artifacts/Bundled-${{ runner.os }}
  
      - name: Set up competitive-verifier
        uses: competitive-verifier/actions/setup@v2
        with:
          cache-pip: true

      - name: Merge results
        uses: competitive-verifier/actions/merge-result@v2
        with:
          result-files: ${{ steps.all-artifacts.outputs.artifacts-root }}/Result-*/result.json
          output-path: ${{github.workspace}}/merged-result.json

      - name: Docs
        uses: competitive-verifier/actions/docs@v2
        with:
          verify-result: ${{github.workspace}}/merged-result.json
          destination: _jekyll
          write-summary: true

      - name: Save result
        if: ${{ contains(fromJSON('["push", "workflow_dispatch"]'), github.event_name) }}
        uses: actions/cache/save@v4
        with:
          path: ${{github.workspace}}/merged-result.json
          key: ${{ runner.os }}-verify-result-${{ github.sha }}

      - name: Setup Pages
        uses: actions/configure-pages@v4
      
      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: _jekyll
          destination: _site
      
      - name: Upload artifact
        id: upload-pages
        uses: actions/upload-pages-artifact@v2
        with:
          path: _site

      - name: Check
        uses: competitive-verifier/actions/check@v2
        with:
          verify-result: ${{ steps.all-artifacts.outputs.artifacts-root }}/Result-*/result.json
  deploy:
    if: (success() || failure()) && github.ref == 'refs/heads/main' && needs.docs-and-check.outputs.upload-pages == 'true'
    needs: docs-and-check
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3